

# Stage 1 WGS – Workflow

#This document summarizes the main steps of the **Whole Genome Sequencing (WGS) Stage 1 project.  

---

## 1. Project setup
```bash
pwd
mkdir project1
mkdir qc_report

#2. Quality control & Trimming
# Run FastQC
fastqc
fastqc

# Run QC + trimming + MultiQC
bash fastp_multiqc_qc.sh

#3. Genome Mapping
# Align trimmed reads to reference genome
bash bwa_samtools_align.sh

#4. Debugging scripts
# Repair read pairs and re-align
bash repair_father_reads.sh
bash fix_father_align.sh

# Check alignment outputs
ls -lh alignment_map/
#Quick check before proceeding 
samtools quickcheck alignment_map/child_sorted.bam && echo "OK" || echo "PROBLEM"

#5. Variant Calling
#Add Read Groups to your sorted BAMs (child and father):
# Child
gatk AddOrReplaceReadGroups \
    -I alignment_map/child_sorted.bam \
    -O alignment_map/child_rg.bam \
    -RGID child \
    -RGLB lib1 \
    -RGPL ILLUMINA \
    -RGPU unit1 \
    -RGSM child
# Father
gatk AddOrReplaceReadGroups \
    -I alignment_map/father_sorted.bam \
    -O alignment_map/father_rg.bam \
    -RGID father \
    -RGLB lib1 \
    -RGPL ILLUMINA \
    -RGPU unit1 \
    -RGSM father
# quick check
samtools view -H alignment_map/child_rg.bam | grep '@RG'
samtools view -H alignment_map/father_rg.bam | grep '@RG'
# check sorted coordinates. SO:coordinate → good, SO:unsorted → need to sort.
samtools view -H alignment_map/child_rg.bam | grep SO
 samtools view -H alignment_map/father_rg.bam | grep SO

# Mark Duplicates
# child
gatk MarkDuplicates \
    -I alignment_map/child_rg.bam \
    -O alignment_map/child_dedup.bam \
    -M alignment_map/child_metrics.txt

# father
gatk MarkDuplicates \
  -I alignment_map/father_rg.bam \
  -O alignment_map/father_dedup.bam \
  -M alignment_map/father_metrics.txt


# Check the BAM header for @PG and @RG
samtools view -H alignment_map/child_dedup.bam | head
samtools view -H alignment_map/father_dedup.bam | head

# Check duplicate metrics
cat alignment_map/child_metrics.txt
cat alignment_map/father_metrics.txt

# BAM indexing
samtools index alignment_map/child_dedup.bam
samtools index alignment_map/father_dedup.bam
ls alignment_map/

# Base Quality Score Recalibration (BQSR)
mkdir -p ~/Mariam/project1/BQSR

# child
gatk BaseRecalibrator \
  -R /data/Homo_sapiens_assembly38.fasta \
  -I ~/Mariam/project1/alignment_map/child_dedup.bam \
  --known-sites /data/Homo_sapiens_assembly38.dbsnp138.vcf.gz \
  --known-sites /data/Homo_sapiens_assembly38.known_indels.vcf.gz \
  -O ~/Mariam/project1/BQSR/child_recal_data.table

gatk ApplyBQSR \
  -R /data/Homo_sapiens_assembly38.fasta \
  -I ~/Mariam/project1/alignment_map/child_dedup.bam \
  --bqsr-recal-file ~/Mariam/project1/BQSR/child_recal_data.table \
  -O ~/Mariam/project1/BQSR/child_recal.bam



# father
gatk BaseRecalibrator \
  -R /data/Homo_sapiens_assembly38.fasta \
  -I ~/Mariam/project1/alignment_map/father_dedup.bam \
  --known-sites /data/Homo_sapiens_assembly38.dbsnp138.vcf.gz \
  --known-sites /data/Homo_sapiens_assembly38.known_indels.vcf.gz \
  -O ~/Mariam/project1/BQSR/father_recal_data.table

gatk ApplyBQSR \
  -R /data/Homo_sapiens_assembly38.fasta \
  -I ~/Mariam/project1/alignment_map/father_dedup.bam \
  --bqsr-recal-file ~/Mariam/project1/BQSR/father_recal_data.table \
  -O ~/Mariam/project1/BQSR/father_recal.bam

#
Confirm
ls -lh ~/Mariam/project1/BQSR/
samtools view -H ~/Mariam/project1/BQSR/child_recal.bam | head
samtools view -H ~/Mariam/project1/BQSR/father_recal.bam | head


# Run variant calling (HaplotypeCaller, CombineGVCFs, GenotypeGVCFs)
# Output VCFs will be in VCF/ folder

mkdir -p ~/Mariam/project1/vcf

# HaplotypeCaller - CFTR-focused, chr7:117480025-117668665
#child 
gatk HaplotypeCaller \
  -R /data/Homo_sapiens_assembly38.fasta \
  -I ~/Mariam/project1/BQSR/child_recal.bam \
  -O ~/Mariam/project1/vcf/child_cftr.g.vcf.gz \
  -ERC GVCF \
  -L chr7:117480025-117668665
# father
gatk HaplotypeCaller \
  -R /data/Homo_sapiens_assembly38.fasta \
  -I ~/Mariam/project1/BQSR/father_recal.bam \
  -O ~/Mariam/project1/vcf/father_cftr.g.vcf.gz \
  -ERC GVCF \
  -L chr7:117480025-117668665

#combined
gatk CombineGVCFs \
  -R /data/Homo_sapiens_assembly38.fasta \
  -V ~/Mariam/project1/vcf/child_cftr.g.vcf.gz \
  -V ~/Mariam/project1/vcf/father_cftr.g.vcf.gz \
  -O ~/Mariam/project1/vcf/family_cftr.combined.g.vcf.gz

#Joint Genotyping
gatk GenotypeGVCFs \
  -R /data/Homo_sapiens_assembly38.fasta \
  -V ~/Mariam/project1/vcf/family_cftr.combined.g.vcf.gz \
  -O ~/Mariam/project1/vcf/family_cftr.vcf.gz

#Check if variants were called
bcftools view ~/Mariam/project1/vcf/family_cftr.vcf.gz | grep -v "^#" | wc -l

#-------------------------------------------------------------------------------------------------------------------------------

#The VCF file for family genotype was viewed in ENSMBLE VEP
#Vep2.txt file was downloaded and filtered on RStudio
# -----------------------------
# 1. Load libraries
# -----------------------------
library(dplyr)
library(stringr)

# -----------------------------
# 2. Read VEP output
# -----------------------------
vep_file <- "C:/meme plans/Bioinformatics internships/hackbio project2/vep2.txt"
vep_df <- read.delim(vep_file, header = TRUE, stringsAsFactors = FALSE)

# Quick check
head(vep_df)
colnames(vep_df)

# -----------------------------
# 3. Filter for CFTR gene
# -----------------------------
cftr_variants <- vep_df %>% filter(SYMBOL == "CFTR")

# -----------------------------
# 4. Highlight variants linked to common CF mutations
# -----------------------------
cf_mutations <- c("F508del", "G542X", "W1282X", "N1303K", "R117H", "G551D")
cftr_variants <- cftr_variants %>%
  mutate(CF_related = ifelse(str_detect(HGVSp, paste(cf_mutations, collapse="|")), TRUE, FALSE))

# -----------------------------
# 5. Pathogenic/Likely pathogenic variants
# -----------------------------
pathogenic_variants <- cftr_variants %>%
  filter(!is.na(CLIN_SIG) & str_detect(tolower(CLIN_SIG), "pathogenic"))

# -----------------------------
# 6. CFTR variants with CF-related phenotypes
# -----------------------------
cftr_cf_phenotypes <- cftr_variants %>%
  filter(!is.na(PHENO) & str_detect(PHENO, regex("Cystic|CFTR|BRONCHIECTASIS", ignore_case = TRUE)))

# -----------------------------
# 7. Summary
# -----------------------------
cat("Total CFTR variants:", nrow(cftr_variants), "\n")
cat("CF-related variants (common CF mutations):", sum(cftr_variants$CF_related), "\n")
cat("Pathogenic/Likely pathogenic variants:", nrow(pathogenic_variants), "\n")
cat("Variants linked to CF-related phenotypes:", nrow(cftr_cf_phenotypes), "\n")

# -----------------------------
# 8. Save outputs
# -----------------------------
write.csv(cftr_variants,
          file = "C:/meme plans/Bioinformatics internships/hackbio project2/CFTR_all_variants.csv",
          row.names = FALSE)

write.csv(pathogenic_variants,
          file = "C:/meme plans/Bioinformatics internships/hackbio project2/pathogenic_CFTR_variants.csv",
          row.names = FALSE)

write.csv(cftr_cf_phenotypes,
          file = "C:/meme plans/Bioinformatics internships/hackbio project2/CFTR_CF_related_variants.csv",
          row.names = FALSE)

cat("All CSV files saved successfully.\n")

# -----------------------------
# 9. Optional: View tables in RStudio
# -----------------------------
if(nrow(cftr_variants) > 0) View(cftr_variants)
if(nrow(pathogenic_variants) > 0) View(pathogenic_variants)
if(nrow(cftr_cf_phenotypes) > 0) View(cftr_cf_phenotypes)
